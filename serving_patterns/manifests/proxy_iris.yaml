apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-iris-proxy
  labels:
    app: api-iris-proxy
  namespace: serving-pattern
spec:
  selector:
    matchLabels:
      app: api-iris-proxy
  replicas: 3
  template:
    metadata:
      labels:
        app: api-iris-proxy
      name: api-iris-proxy
    spec:
      containers:
        - name: api-iris-proxy
          image: shibui/ml-system-in-action:serving_patterns_proxy
          command: ["./run_proxy.sh"]
          env:
            - name: PLATFORM
              value: kubernetes
            - name: CACHE_HOST
              value: redis.serving-pattern.svc.cluster.local
            - name: RUNNER
              value: GUNICORN
            - name: WORKERS
              value: "4"
            - name: BACKLOG
              value: "65536"
            - name: LIMIT_MAX_REQUESTS
              value: "4294967296"
            - name: MAX_REQUESTS_JITTER
              value: "2048"
            - name: APP_NAME
              value: "src.api_composition_proxy.apps.proxy:app"
            - name: PORT
              value: "8000"
            - name: PROFILE
              value: "0"
            - name: QUEUE_NAME
              value: tree_api_queue
            - name: SERVICE_WEB_SINGLE
              value: api-iris-web-single.serving-pattern.svc.cluster.local:8888
            - name: SERVICE_SYNCHRONOUS
              value: api-iris-synchronous.serving-pattern.svc.cluster.local:8889
            - name: SERVICE_ASYNCHRONOUS
              value: api-iris-asynchronous.serving-pattern.svc.cluster.local:8890
            - name: CUSTOMIZED_REDIRECT_MAP
              value: '{"SERVICE_WEB_SINGLE":{"predict":"predict/label"},"SERVICE_SYNCHRONOUS":{"predict":"predict/label"},"SERVICE_ASYNCHRONOUS":{"predict/label":"predict"}}'
          resources:
            limits:
              cpu: "2"
              memory: "1000Mi"
            requests:
              cpu: "2"
              memory: "1000Mi"
          ports:
            - containerPort: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: api-iris-proxy
  labels:
    app: api-iris-proxy
  namespace: serving-pattern
spec:
  ports:
    - port: 8000
      protocol: TCP
  selector:
    app: api-iris-proxy
